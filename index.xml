<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DL-WFS</title>
    <link>https://geolxb.github.io/openWFS/</link>
    <description>Recent content on DL-WFS</description>
    <image>
      <title>DL-WFS</title>
      <url>https://geolxb.github.io/openWFS/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://geolxb.github.io/openWFS/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.125.7</generator>
    <language>en</language>
    <lastBuildDate>Wed, 30 Oct 2024 21:13:38 +0800</lastBuildDate>
    <atom:link href="https://geolxb.github.io/openWFS/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Step 1: creat training datasets</title>
      <link>https://geolxb.github.io/openWFS/tutorial/step1/</link>
      <pubDate>Wed, 30 Oct 2024 21:13:38 +0800</pubDate>
      <guid>https://geolxb.github.io/openWFS/tutorial/step1/</guid>
      <description>VSP upgoing/downgoing case Coming soon
No specific task case Coming soon</description>
    </item>
    <item>
      <title>Step 2: merge datasets for training</title>
      <link>https://geolxb.github.io/openWFS/tutorial/step2/</link>
      <pubDate>Wed, 30 Oct 2024 21:13:38 +0800</pubDate>
      <guid>https://geolxb.github.io/openWFS/tutorial/step2/</guid>
      <description>Coming soon</description>
    </item>
    <item>
      <title>Step 3: training model</title>
      <link>https://geolxb.github.io/openWFS/tutorial/step3/</link>
      <pubDate>Wed, 30 Oct 2024 21:13:38 +0800</pubDate>
      <guid>https://geolxb.github.io/openWFS/tutorial/step3/</guid>
      <description>Coming soon</description>
    </item>
    <item>
      <title>Optimization model</title>
      <link>https://geolxb.github.io/openWFS/tutorial/optimization_models/</link>
      <pubDate>Tue, 29 Oct 2024 21:13:38 +0800</pubDate>
      <guid>https://geolxb.github.io/openWFS/tutorial/optimization_models/</guid>
      <description>Coming soon</description>
    </item>
    <item>
      <title></title>
      <link>https://geolxb.github.io/openWFS/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://geolxb.github.io/openWFS/about/</guid>
      <description>This project aims to provide an efficient and accurate deep learning algorithm for seismic data wavefield separation. The algorithm functions similarly to F-K filtering and Radon transform filtering and is applicable to various scenarios, including VSP up- and down-going wave separation, DAS-VSP single-component P/S separation based on apparent velocity differences, multiple-wave attenuation in CMP and CRP gathers, and linear noise attenuation. This method is suitable for tasks where the wavefields to be separated have significant apparent velocity differences.</description>
    </item>
    <item>
      <title>Application case</title>
      <link>https://geolxb.github.io/openWFS/application/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://geolxb.github.io/openWFS/application/</guid>
      <description>core python functionsï¼šsep_function.py separate_one(data, model, boundary=0, time_interp:int=1, sampling_x:int=1, segment_x:int=1024, segment_overlap:int=50, iter:int=1, method=&amp;#34;up&amp;#34;): data: input seismic data: A 2-dimentional numpy.array model: The trained deep learning model boundary: Boundary slope or boundary T-D curves time_interp: Time interpolation sampling_x: Spatial downsampling rate segment_x: Segment length in the spatial direction segment_overlap: An overlap is set between the groups iter: The number of repeated predictions method: &amp;#34;up&amp;#34; &amp;#34;down&amp;#34; &amp;#34;middle&amp;#34; &amp;#34;outside&amp;#34; &amp;#34;median&amp;#34; separate_gathers(data, model, boundary=0, time_interp:int=1, sampling_x:int=1, segment_x:int=1024, segment_overlap:int=50, iter:int=1, method=&amp;#34;up&amp;#34;): data: 3-dimentional seismic data, 0-axis: list or numpy; 1- and 2-axis: numpy dim0: gather; dim1: time; dim2: trace Case 1: VSP upgoing and dwongoing The trained model, when used with default parameters, can effectively separate upgoing and downgoing waves.</description>
    </item>
    <item>
      <title>Datasets</title>
      <link>https://geolxb.github.io/openWFS/datasets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://geolxb.github.io/openWFS/datasets/</guid>
      <description>License(s): Creative Commons Attribution Share-Alike 4.0 (CC BY-SA 4.0)
0 Introduction The datasets are stored in HDF5 files, with each file containing 20,000 upgoing and downgoing labels for a size of 128x128, or 40,000 labels for a size of 128x48. The dataset and code can be downloaded from Google Drive. In the HDF5 files, the patche order has been randomly shuffled. Using HDF5 VirtualLayout, a virtual file is generated to merge all sub-files for model training.</description>
    </item>
  </channel>
</rss>
